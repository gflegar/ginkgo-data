(
"Parameters: ";
$system := "tintorrum-P100-PCIe-adaptive";
$num_blocks := [50000][0];
$component := ["find_blocks", "generate", "simple_apply"][2];
$plot_kind := ["performance", "bandwidth"][0];

"Constants: ";
$precisions := [
    {"id": "0,0", "label": "(11, 52)", "size": 8 },
    {"id": "0,1", "label": "( 8, 23)", "size": 4 },
    {"id": "1,0", "label": "(11, 20)", "size": 4 },
    {"id": "0,2", "label": "( 5, 10)", "size": 2 },
    {"id": "2,0", "label": "(11,  4)", "size": 2 },
    {"id": "1,1", "label": "( 8,  7)", "size": 2 }
];

$stage := {
    "find_blocks": "generate",
    "generate": "generate",
    "simple_apply": "apply"
}~>$lookup($component);

"Utility functions: ";

$getColor := function($num_colors, $id) {
  "hsl(" & $floor(360 * $id / $num_colors) & ",40%,55%)"
};

$total_flops := function($component, $num_blocks, $block_size, $precision) {
    $component = "generate" ? (2 * ($block_size~>$power(3)) * $num_blocks) :
    $component = "simple_apply" ? ( 2 * ($block_size~>$power(2)) * $num_blocks) :
    (($block_size~>$power(2)) * $num_blocks)
};

$total_data := function($component, $num_blocks, $block_size, $precision) {
    $component = "generate" ? 
        (($block_size~>$power(2)) * $num_blocks * (4 + 8 + $precision.size)) :
    $component = "simple_apply" ?
        ((($block_size~>$power(2)) * $precision.size + 2 * $block_size * 8) * $num_blocks) :
    (($block_size~>$power(2)) * $num_blocks * (4 + 8))
};

"Filter out only preconditioner-related data";
$filter_result := function($dataset, $blocks) {
($dataset[problem.num_blocks=$blocks].{
    "block_size": problem.block_size,
    "preconditioner": preconditioner
})^(block_size)
};

"Transform data to plottable result";
$transform_data := function($filtered, $precision, $count) {
    (
    $filtered.(
        $count($component, $num_blocks, block_size, $precision) /
        ((preconditioner~>$lookup("jacobi-" & block_size & "-" & $precision.id)
            ~>$lookup($stage))
            .components~>$lookup($component))
    );
    )
};

$count_function := $plot_kind = "bandwidth" ? $total_data : $total_flops;
$ylabel := $plot_kind = "bandwidth" ? "GB/s" : "GFlop/s";

$dsize := $precisions~>$count();
$filtered := $$.content[dataset.system=$system]~>$filter_result($num_blocks);
$datasets := $precisions~>$map(function ($v, $i) {
    {
        "label": $v.label,
        "data":  $filtered~>$transform_data($v, $count_function),
        "borderColor": $getColor($dsize, $i),
        "backgroundColor": $getColor($dsize, $i),
        "fill": false
    }
});

{
    "metadata_": {
        "systems": content.dataset.system.{ $: null }~>$keys()
    },
    "type": "bar",
    "data": {
        "labels": [1..32],
        "datasets": $datasets~>$append([])
    },
    "options": {
        "title": {
            "display": true,
            "text": $system & " " & $plot_kind & " of '" &
                    $component & "' step of '" & $stage & "' stage"
        },
        "scales": {
            "xAxes": [{
                "scaleLabel": {
                    "display": true,
                    "labelString": "Block size"
                }
            }],
            "yAxes": [{
                "scaleLabel": {
                    "display": true,
                    "labelString": $ylabel
                },
                "ticks": {
                    "beginAtZero": true
                }
            }]
        },
        "tooltips": { "mode": "index" }
    }
}
)
